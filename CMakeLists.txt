#
# project: fips-rpmalloc
#
option(RPMALLOC_BUILD_WRAP_LIB "Include libc entry point overrides" OFF)

option(RPMALLOC_ENABLE_STATISTICS "Enable statistics" OFF)
option(RPMALLOC_ENABLE_VALIDATE_ARGS "Enable argument validation" OFF)
option(RPMALLOC_ENABLE_ASSERTS "Enable asserts" OFF)
option(RPMALLOC_ENABLE_GUARDS "Enable overwrite/underwrite guards" OFF)

if (NOT FIPS_IMPORT)
    cmake_minimum_required(VERSION 2.8)
    get_filename_component(FIPS_ROOT_DIR "../fips" ABSOLUTE)
    include("${FIPS_ROOT_DIR}/cmake/fips.cmake")
    fips_setup(PROJECT fips-rpmalloc)
endif()

macro(configure)
    if (RPMALLOC_BUILD_WRAP_LIB)
        add_definitions(-DENABLE_PRELOAD=1)
    endif()
    if (RPMALLOC_ENABLE_STATISTICS)
        add_definitions(-DENABLE_STATISTICS=1)
    endif()
    if (RPMALLOC_ENABLE_VALIDATE_ARGS)
        add_definitions(-DENABLE_VALIDATE_ARGS=1)
    endif()
    if (RPMALLOC_ENABLE_ASSERTS)
        add_definitions(-DENABLE_ASSERTS=1)
    endif()
    if (RPMALLOC_ENABLE_GUARDS)
        add_definitions(-DENABLE_GUARDS=1)
    endif()
endmacro()

fips_begin_lib(rpmalloc)
    configure()
    fips_include_directories(rpmalloc/rpmalloc)
    fips_dir(rpmalloc/rpmalloc GROUP ".")
    fips_files(rpmalloc.h rpmalloc.c)
    if (RPMALLOC_BUILD_WRAP_LIB)
        fips_files(malloc.c new.cc)
    endif()
fips_end_lib()

if (NOT FIPS_IMPORT)
    fips_begin_app(rpmalloc_test cmdline)
        configure()
        fips_include_directories(rpmalloc/test)
        fips_dir(rpmalloc/test GROUP ".")
        fips_files(main.c test.h thread.c thread.h)
        fips_deps(rpmalloc)
        if (FIPS_GCC)
            add_definitions(-D_GNU_SOURCE)
        endif()
    fips_end_app()

    fips_finish()
endif()
